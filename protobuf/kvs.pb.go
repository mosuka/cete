// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/kvs.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event_Type int32

const (
	Event_Unknown Event_Type = 0
	Event_Join    Event_Type = 1
	Event_Leave   Event_Type = 2
	Event_Set     Event_Type = 3
	Event_Delete  Event_Type = 4
)

var Event_Type_name = map[int32]string{
	0: "Unknown",
	1: "Join",
	2: "Leave",
	3: "Set",
	4: "Delete",
}

var Event_Type_value = map[string]int32{
	"Unknown": 0,
	"Join":    1,
	"Leave":   2,
	"Set":     3,
	"Delete":  4,
}

func (x Event_Type) String() string {
	return proto.EnumName(Event_Type_name, int32(x))
}

func (Event_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{13, 0}
}

type Metadata struct {
	GrpcAddr             string   `protobuf:"bytes,1,opt,name=grpc_addr,json=grpcAddr,proto3" json:"grpc_addr,omitempty"`
	HttpAddr             string   `protobuf:"bytes,2,opt,name=http_addr,json=httpAddr,proto3" json:"http_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{0}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetGrpcAddr() string {
	if m != nil {
		return m.GrpcAddr
	}
	return ""
}

func (m *Metadata) GetHttpAddr() string {
	if m != nil {
		return m.HttpAddr
	}
	return ""
}

type Node struct {
	BindAddr             string    `protobuf:"bytes,1,opt,name=bind_addr,json=bindAddr,proto3" json:"bind_addr,omitempty"`
	Metadata             *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	State                string    `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetBindAddr() string {
	if m != nil {
		return m.BindAddr
	}
	return ""
}

func (m *Node) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Node) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type Cluster struct {
	Nodes                map[string]*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Leader               string           `protobuf:"bytes,2,opt,name=leader,proto3" json:"leader,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{2}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetNodes() map[string]*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Cluster) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

type JoinRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Node                 *Node    `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{3}
}

func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JoinRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type LeaveRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveRequest) Reset()         { *m = LeaveRequest{} }
func (m *LeaveRequest) String() string { return proto.CompactTextString(m) }
func (*LeaveRequest) ProtoMessage()    {}
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{4}
}

func (m *LeaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveRequest.Unmarshal(m, b)
}
func (m *LeaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveRequest.Marshal(b, m, deterministic)
}
func (m *LeaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRequest.Merge(m, src)
}
func (m *LeaveRequest) XXX_Size() int {
	return xxx_messageInfo_LeaveRequest.Size(m)
}
func (m *LeaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRequest proto.InternalMessageInfo

func (m *LeaveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type NodeResponse struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeResponse) Reset()         { *m = NodeResponse{} }
func (m *NodeResponse) String() string { return proto.CompactTextString(m) }
func (*NodeResponse) ProtoMessage()    {}
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{5}
}

func (m *NodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeResponse.Unmarshal(m, b)
}
func (m *NodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeResponse.Marshal(b, m, deterministic)
}
func (m *NodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeResponse.Merge(m, src)
}
func (m *NodeResponse) XXX_Size() int {
	return xxx_messageInfo_NodeResponse.Size(m)
}
func (m *NodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeResponse proto.InternalMessageInfo

func (m *NodeResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type ClusterResponse struct {
	Cluster              *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterResponse) Reset()         { *m = ClusterResponse{} }
func (m *ClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterResponse) ProtoMessage()    {}
func (*ClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{6}
}

func (m *ClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterResponse.Unmarshal(m, b)
}
func (m *ClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterResponse.Marshal(b, m, deterministic)
}
func (m *ClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterResponse.Merge(m, src)
}
func (m *ClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterResponse.Size(m)
}
func (m *ClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterResponse proto.InternalMessageInfo

func (m *ClusterResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type GetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{7}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetResponse struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{8}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{9}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type DeleteRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{10}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type SetMetadataRequest struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata             *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetMetadataRequest) Reset()         { *m = SetMetadataRequest{} }
func (m *SetMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*SetMetadataRequest) ProtoMessage()    {}
func (*SetMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{11}
}

func (m *SetMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetMetadataRequest.Unmarshal(m, b)
}
func (m *SetMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetMetadataRequest.Marshal(b, m, deterministic)
}
func (m *SetMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetMetadataRequest.Merge(m, src)
}
func (m *SetMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_SetMetadataRequest.Size(m)
}
func (m *SetMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetMetadataRequest proto.InternalMessageInfo

func (m *SetMetadataRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetMetadataRequest) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type DeleteMetadataRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMetadataRequest) Reset()         { *m = DeleteMetadataRequest{} }
func (m *DeleteMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMetadataRequest) ProtoMessage()    {}
func (*DeleteMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{12}
}

func (m *DeleteMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMetadataRequest.Unmarshal(m, b)
}
func (m *DeleteMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMetadataRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMetadataRequest.Merge(m, src)
}
func (m *DeleteMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMetadataRequest.Size(m)
}
func (m *DeleteMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMetadataRequest proto.InternalMessageInfo

func (m *DeleteMetadataRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Event struct {
	Type                 Event_Type `protobuf:"varint,1,opt,name=type,proto3,enum=kvs.Event_Type" json:"type,omitempty"`
	Data                 *any.Any   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{13}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() Event_Type {
	if m != nil {
		return m.Type
	}
	return Event_Unknown
}

func (m *Event) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type WatchResponse struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchResponse) Reset()         { *m = WatchResponse{} }
func (m *WatchResponse) String() string { return proto.CompactTextString(m) }
func (*WatchResponse) ProtoMessage()    {}
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{14}
}

func (m *WatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse.Unmarshal(m, b)
}
func (m *WatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse.Marshal(b, m, deterministic)
}
func (m *WatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse.Merge(m, src)
}
func (m *WatchResponse) XXX_Size() int {
	return xxx_messageInfo_WatchResponse.Size(m)
}
func (m *WatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse proto.InternalMessageInfo

func (m *WatchResponse) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type MetricsResponse struct {
	Metrics              []byte   `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsResponse) Reset()         { *m = MetricsResponse{} }
func (m *MetricsResponse) String() string { return proto.CompactTextString(m) }
func (*MetricsResponse) ProtoMessage()    {}
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{15}
}

func (m *MetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsResponse.Unmarshal(m, b)
}
func (m *MetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsResponse.Marshal(b, m, deterministic)
}
func (m *MetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsResponse.Merge(m, src)
}
func (m *MetricsResponse) XXX_Size() int {
	return xxx_messageInfo_MetricsResponse.Size(m)
}
func (m *MetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsResponse proto.InternalMessageInfo

func (m *MetricsResponse) GetMetrics() []byte {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type KeyValuePair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_431078ad7b21f851, []int{16}
}

func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (m *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(m, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValuePair) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterEnum("kvs.Event_Type", Event_Type_name, Event_Type_value)
	proto.RegisterType((*Metadata)(nil), "kvs.Metadata")
	proto.RegisterType((*Node)(nil), "kvs.Node")
	proto.RegisterType((*Cluster)(nil), "kvs.Cluster")
	proto.RegisterMapType((map[string]*Node)(nil), "kvs.Cluster.NodesEntry")
	proto.RegisterType((*JoinRequest)(nil), "kvs.JoinRequest")
	proto.RegisterType((*LeaveRequest)(nil), "kvs.LeaveRequest")
	proto.RegisterType((*NodeResponse)(nil), "kvs.NodeResponse")
	proto.RegisterType((*ClusterResponse)(nil), "kvs.ClusterResponse")
	proto.RegisterType((*GetRequest)(nil), "kvs.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "kvs.GetResponse")
	proto.RegisterType((*SetRequest)(nil), "kvs.SetRequest")
	proto.RegisterType((*DeleteRequest)(nil), "kvs.DeleteRequest")
	proto.RegisterType((*SetMetadataRequest)(nil), "kvs.SetMetadataRequest")
	proto.RegisterType((*DeleteMetadataRequest)(nil), "kvs.DeleteMetadataRequest")
	proto.RegisterType((*Event)(nil), "kvs.Event")
	proto.RegisterType((*WatchResponse)(nil), "kvs.WatchResponse")
	proto.RegisterType((*MetricsResponse)(nil), "kvs.MetricsResponse")
	proto.RegisterType((*KeyValuePair)(nil), "kvs.KeyValuePair")
}

func init() { proto.RegisterFile("protobuf/kvs.proto", fileDescriptor_431078ad7b21f851) }

var fileDescriptor_431078ad7b21f851 = []byte{
	// 861 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xdd, 0x72, 0xdb, 0x54,
	0x10, 0xae, 0xfc, 0x13, 0x3b, 0x6b, 0x27, 0x51, 0xb7, 0x26, 0xb8, 0x6a, 0x49, 0xd3, 0xd3, 0x19,
	0x08, 0x86, 0x58, 0x34, 0x30, 0xfc, 0x64, 0xe8, 0x45, 0x49, 0x33, 0x9d, 0xa1, 0x29, 0xcd, 0xc8,
	0x50, 0x66, 0xb8, 0x61, 0x4e, 0xac, 0xc5, 0xd6, 0xd8, 0x96, 0x84, 0x74, 0xec, 0x8e, 0xa6, 0xd3,
	0x1b, 0x5e, 0x81, 0xe1, 0xc9, 0x78, 0x05, 0x5e, 0x81, 0x7b, 0xe6, 0xfc, 0xc8, 0xb2, 0xeb, 0x8a,
	0xf6, 0xca, 0x3a, 0xfb, 0xed, 0x7e, 0xfb, 0x69, 0xcf, 0xb7, 0x32, 0x60, 0x9c, 0x44, 0x22, 0xba,
	0x9a, 0xff, 0xe6, 0x4e, 0x16, 0x69, 0x5f, 0x1d, 0xb0, 0x3a, 0x59, 0xa4, 0xce, 0xcd, 0x51, 0x14,
	0x8d, 0xa6, 0xe4, 0x2e, 0x71, 0x1e, 0x66, 0x1a, 0x77, 0x6e, 0xbd, 0x0e, 0xd1, 0x2c, 0x16, 0x39,
	0x78, 0xdb, 0x80, 0x3c, 0x0e, 0x5c, 0x1e, 0x86, 0x91, 0xe0, 0x22, 0x88, 0x42, 0x43, 0xed, 0x7c,
	0xaa, 0x7e, 0x86, 0xc7, 0x23, 0x0a, 0x8f, 0xd3, 0x17, 0x7c, 0x34, 0xa2, 0xc4, 0x8d, 0x62, 0x95,
	0xb1, 0x99, 0xcd, 0x1e, 0x41, 0xf3, 0x29, 0x09, 0xee, 0x73, 0xc1, 0xf1, 0x16, 0x6c, 0x8f, 0x92,
	0x78, 0xf8, 0x2b, 0xf7, 0xfd, 0xa4, 0x6b, 0x1d, 0x5a, 0x47, 0xdb, 0x5e, 0x53, 0x06, 0x1e, 0xfa,
	0x7e, 0x22, 0xc1, 0xb1, 0x10, 0xb1, 0x06, 0x2b, 0x1a, 0x94, 0x01, 0x09, 0x32, 0x1f, 0x6a, 0x3f,
	0x44, 0x3e, 0xc9, 0xa4, 0xab, 0x20, 0xf4, 0xd7, 0x18, 0x64, 0x40, 0x31, 0x7c, 0x0c, 0xcd, 0x99,
	0x69, 0xa5, 0x08, 0x5a, 0x27, 0x3b, 0x7d, 0x39, 0x91, 0xbc, 0xbf, 0xb7, 0x84, 0xb1, 0x03, 0xf5,
	0x54, 0x70, 0x41, 0xdd, 0xaa, 0xe2, 0xd0, 0x07, 0xf6, 0x97, 0x05, 0x8d, 0xb3, 0xe9, 0x3c, 0x15,
	0x94, 0xe0, 0x31, 0xd4, 0xc3, 0xc8, 0xa7, 0xb4, 0x6b, 0x1d, 0x56, 0x8f, 0x5a, 0x27, 0xef, 0x2b,
	0x26, 0x03, 0xf6, 0xa5, 0x96, 0xf4, 0x3c, 0x14, 0x49, 0xe6, 0xe9, 0x2c, 0xdc, 0x87, 0xad, 0x29,
	0x71, 0x9f, 0x72, 0xe9, 0xe6, 0xe4, 0x9c, 0x01, 0x14, 0xc9, 0x68, 0x43, 0x75, 0x42, 0x99, 0x11,
	0x2e, 0x1f, 0xf1, 0x0e, 0xd4, 0x17, 0x7c, 0x3a, 0x27, 0x23, 0x78, 0x5b, 0xb5, 0x91, 0x15, 0x9e,
	0x8e, 0x9f, 0x56, 0xbe, 0xb6, 0xd8, 0xb7, 0xd0, 0xfa, 0x3e, 0x0a, 0x42, 0x8f, 0x7e, 0x9f, 0x53,
	0x2a, 0x70, 0x17, 0x2a, 0x81, 0x6f, 0x48, 0x2a, 0x81, 0x8f, 0x1f, 0x40, 0x4d, 0x8a, 0xd8, 0xa4,
	0x50, 0x61, 0x76, 0x00, 0xed, 0x0b, 0xe2, 0x0b, 0x2a, 0x29, 0x67, 0xc7, 0xd0, 0x56, 0xd9, 0x94,
	0xc6, 0x51, 0x98, 0xd2, 0x92, 0xce, 0x7a, 0x33, 0xdd, 0x37, 0xb0, 0x67, 0xc6, 0xb0, 0xac, 0xf8,
	0x10, 0x1a, 0x43, 0x1d, 0x32, 0x45, 0xed, 0xd5, 0x69, 0x79, 0x39, 0xc8, 0x0e, 0x00, 0x1e, 0x93,
	0xc8, 0x75, 0x6c, 0x0c, 0x83, 0xdd, 0x83, 0x96, 0xc2, 0x0d, 0x6d, 0x27, 0x9f, 0x8d, 0x4c, 0x69,
	0x9b, 0x81, 0xb0, 0x2f, 0x00, 0x06, 0xff, 0x43, 0x52, 0x54, 0x55, 0x56, 0xab, 0xee, 0xc2, 0xce,
	0x23, 0x9a, 0x92, 0xa0, 0xf2, 0xee, 0xcf, 0x00, 0x07, 0x24, 0x96, 0x66, 0x29, 0x19, 0xf6, 0xbb,
	0x9b, 0x8c, 0x7d, 0x04, 0xef, 0xe9, 0x9e, 0x6f, 0xe1, 0x94, 0xbe, 0xab, 0x9f, 0x2f, 0x28, 0x14,
	0x78, 0x0f, 0x6a, 0x22, 0x8b, 0xf5, 0x1b, 0xef, 0x9e, 0xec, 0x29, 0x66, 0x85, 0xf4, 0x7f, 0xcc,
	0x62, 0xf2, 0x14, 0x88, 0x47, 0x50, 0x5b, 0x69, 0xdf, 0xe9, 0xeb, 0x6d, 0xed, 0xe7, 0xab, 0xdc,
	0x7f, 0x18, 0x66, 0x9e, 0xca, 0x60, 0x0f, 0xa0, 0x26, 0xeb, 0xb0, 0x05, 0x8d, 0x9f, 0xc2, 0x49,
	0x18, 0xbd, 0x08, 0xed, 0x6b, 0xd8, 0x84, 0x9a, 0x74, 0x93, 0x6d, 0xe1, 0x36, 0xd4, 0x95, 0x33,
	0xec, 0x0a, 0x36, 0xa0, 0x3a, 0x20, 0x61, 0x57, 0x11, 0x60, 0x4b, 0x8b, 0xb6, 0x6b, 0xec, 0x3e,
	0xec, 0xfc, 0xcc, 0xc5, 0x70, 0xbc, 0xbc, 0x91, 0x43, 0xa8, 0x93, 0x54, 0x63, 0xae, 0x19, 0x0a,
	0x7d, 0x9e, 0x06, 0xd8, 0x27, 0xb0, 0xf7, 0x94, 0x44, 0x12, 0x0c, 0xd3, 0x65, 0x51, 0x17, 0x1a,
	0x33, 0x1d, 0x32, 0x17, 0x99, 0x1f, 0xd9, 0x97, 0xd0, 0x7e, 0x42, 0xd9, 0x73, 0x79, 0x41, 0x97,
	0x3c, 0x48, 0xde, 0xf5, 0x32, 0x4f, 0xfe, 0xad, 0x43, 0xf5, 0xc9, 0xf3, 0x01, 0x9e, 0x99, 0xaf,
	0xc2, 0xfe, 0xc6, 0x08, 0xce, 0xe5, 0xd7, 0xcc, 0xb9, 0x5e, 0x78, 0xd7, 0x88, 0x61, 0xf6, 0x1f,
	0x7f, 0xff, 0xf3, 0x67, 0x05, 0xb0, 0xe9, 0x2e, 0xee, 0xbb, 0xd2, 0xcf, 0x78, 0xa9, 0xc7, 0x81,
	0xb6, 0x4a, 0x5e, 0xd9, 0x33, 0xa7, 0x84, 0x96, 0x1d, 0x28, 0x8e, 0xae, 0x63, 0x4b, 0x0e, 0xe3,
	0x6d, 0xf7, 0x65, 0xe0, 0xbf, 0x3a, 0x55, 0x1b, 0x82, 0x17, 0xc5, 0x57, 0xa4, 0x4c, 0x59, 0x67,
	0x6d, 0x41, 0x72, 0x71, 0x37, 0x14, 0xf1, 0x0e, 0xb6, 0x56, 0x88, 0xf1, 0xc2, 0x5c, 0x12, 0xea,
	0xb7, 0x59, 0x5d, 0xe5, 0x52, 0x85, 0x5d, 0x45, 0x84, 0xbd, 0x0d, 0x85, 0x78, 0x09, 0xcd, 0x41,
	0xc8, 0xe3, 0x74, 0x1c, 0x89, 0x52, 0x71, 0x65, 0xac, 0x1d, 0xc5, 0xba, 0x8b, 0x6d, 0xc9, 0x9a,
	0xe6, 0x2c, 0x67, 0x50, 0x7d, 0x4c, 0x02, 0xb5, 0x57, 0x8b, 0xf5, 0x76, 0xec, 0x22, 0x60, 0x5e,
	0xef, 0xa6, 0xaa, 0xbf, 0x81, 0xd7, 0x65, 0xbd, 0xf4, 0xa7, 0xfb, 0x72, 0x42, 0xd9, 0x83, 0x5e,
	0xef, 0x15, 0x5e, 0x28, 0xfb, 0x19, 0x92, 0x62, 0xbd, 0x4b, 0xa5, 0xdc, 0x56, 0x54, 0xfb, 0xce,
	0x26, 0xd5, 0xa9, 0xd5, 0xc3, 0x67, 0xb9, 0x87, 0x11, 0x15, 0xe1, 0xda, 0xe6, 0x97, 0x72, 0x1a,
	0x79, 0xbd, 0x37, 0xc8, 0xfb, 0x0a, 0xea, 0x6a, 0x11, 0x4a, 0x47, 0xa6, 0xfb, 0xac, 0x2d, 0x0b,
	0xbb, 0xf6, 0x99, 0x25, 0xad, 0x60, 0xd6, 0xe1, 0x2d, 0x56, 0x78, 0x6d, 0x69, 0xd6, 0xad, 0x60,
	0xf6, 0xe5, 0xbb, 0xbb, 0xbf, 0xdc, 0x19, 0x05, 0x62, 0x3c, 0xbf, 0xea, 0x0f, 0xa3, 0x99, 0x3b,
	0x8b, 0xd2, 0xf9, 0x84, 0xbb, 0x43, 0x12, 0xc5, 0xdf, 0xf8, 0xd5, 0x96, 0x7a, 0xfa, 0xfc, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x29, 0x2d, 0x7b, 0x14, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KVSClient is the client API for KVS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVSClient interface {
	Node(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeResponse, error)
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Cluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterResponse, error)
	Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Watch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (KVS_WatchClient, error)
	Metrics(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MetricsResponse, error)
}

type kVSClient struct {
	cc *grpc.ClientConn
}

func NewKVSClient(cc *grpc.ClientConn) KVSClient {
	return &kVSClient{cc}
}

func (c *kVSClient) Node(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeResponse, error) {
	out := new(NodeResponse)
	err := c.cc.Invoke(ctx, "/kvs.KVS/Node", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/kvs.KVS/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Cluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ClusterResponse, error) {
	out := new(ClusterResponse)
	err := c.cc.Invoke(ctx, "/kvs.KVS/Cluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/kvs.KVS/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/kvs.KVS/Snapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/kvs.KVS/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/kvs.KVS/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/kvs.KVS/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVSClient) Watch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (KVS_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_KVS_serviceDesc.Streams[0], "/kvs.KVS/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &kVSWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type KVS_WatchClient interface {
	Recv() (*WatchResponse, error)
	grpc.ClientStream
}

type kVSWatchClient struct {
	grpc.ClientStream
}

func (x *kVSWatchClient) Recv() (*WatchResponse, error) {
	m := new(WatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *kVSClient) Metrics(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/kvs.KVS/Metrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVSServer is the server API for KVS service.
type KVSServer interface {
	Node(context.Context, *empty.Empty) (*NodeResponse, error)
	Join(context.Context, *JoinRequest) (*empty.Empty, error)
	Cluster(context.Context, *empty.Empty) (*ClusterResponse, error)
	Leave(context.Context, *LeaveRequest) (*empty.Empty, error)
	Snapshot(context.Context, *empty.Empty) (*empty.Empty, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Set(context.Context, *SetRequest) (*empty.Empty, error)
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	Watch(*empty.Empty, KVS_WatchServer) error
	Metrics(context.Context, *empty.Empty) (*MetricsResponse, error)
}

// UnimplementedKVSServer can be embedded to have forward compatible implementations.
type UnimplementedKVSServer struct {
}

func (*UnimplementedKVSServer) Node(ctx context.Context, req *empty.Empty) (*NodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Node not implemented")
}
func (*UnimplementedKVSServer) Join(ctx context.Context, req *JoinRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedKVSServer) Cluster(ctx context.Context, req *empty.Empty) (*ClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cluster not implemented")
}
func (*UnimplementedKVSServer) Leave(ctx context.Context, req *LeaveRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}
func (*UnimplementedKVSServer) Snapshot(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Snapshot not implemented")
}
func (*UnimplementedKVSServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedKVSServer) Set(ctx context.Context, req *SetRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedKVSServer) Delete(ctx context.Context, req *DeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedKVSServer) Watch(req *empty.Empty, srv KVS_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedKVSServer) Metrics(ctx context.Context, req *empty.Empty) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Metrics not implemented")
}

func RegisterKVSServer(s *grpc.Server, srv KVSServer) {
	s.RegisterService(&_KVS_serviceDesc, srv)
}

func _KVS_Node_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Node(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvs.KVS/Node",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Node(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvs.KVS/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Cluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Cluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvs.KVS/Cluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Cluster(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvs.KVS/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Leave(ctx, req.(*LeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Snapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Snapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvs.KVS/Snapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Snapshot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvs.KVS/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvs.KVS/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvs.KVS/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVS_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KVSServer).Watch(m, &kVSWatchServer{stream})
}

type KVS_WatchServer interface {
	Send(*WatchResponse) error
	grpc.ServerStream
}

type kVSWatchServer struct {
	grpc.ServerStream
}

func (x *kVSWatchServer) Send(m *WatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _KVS_Metrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVSServer).Metrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvs.KVS/Metrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVSServer).Metrics(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _KVS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kvs.KVS",
	HandlerType: (*KVSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Node",
			Handler:    _KVS_Node_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _KVS_Join_Handler,
		},
		{
			MethodName: "Cluster",
			Handler:    _KVS_Cluster_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _KVS_Leave_Handler,
		},
		{
			MethodName: "Snapshot",
			Handler:    _KVS_Snapshot_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _KVS_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _KVS_Set_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _KVS_Delete_Handler,
		},
		{
			MethodName: "Metrics",
			Handler:    _KVS_Metrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _KVS_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/kvs.proto",
}
